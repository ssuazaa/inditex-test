plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.openapi.generator' version '7.11.0'
}

group = 'com.susocode'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.mapstruct:mapstruct:1.6.3'
    implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.8.5'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'io.r2dbc:r2dbc-h2'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.named('compileJava') {
    dependsOn tasks.openApiGenerate
}

openApiGenerate {
    generatorName = "spring"
    inputSpec = "$rootDir/src/main/resources/static/openapi.yaml"
    outputDir = layout.buildDirectory.dir("generated").get().asFile.absolutePath
    apiPackage = "com.susocode.inditextest.api"
    modelPackage = "com.susocode.inditextest.model"
    configOptions = [
            interfaceOnly : "true",
            reactive      : "true",
            dateLibrary   : "java8-localdatetime",
            useSpringBoot3: "true",
            useTags       : "true"
    ]
}

sourceSets {
    main {
        java {
            srcDir layout.buildDirectory.dir("generated/src/main/java").get().asFile
        }
    }
}